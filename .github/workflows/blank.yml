name: CI-CD with kind (local IP testing)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: demo-cluster
      KIND_VERSION: v0.23.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kind
        uses: helm/kind-action@v1.10.0
        with:
          version: ${{ env.KIND_VERSION }}
          cluster_name: ${{ env.CLUSTER_NAME }}

      - name: Create jfrog-creds secret
        run: |
          kubectl create secret docker-registry jfrog-creds \
            --docker-server=${{ secrets.ARTIFACTORY_URL }} \
            --docker-username=${{ secrets.ARTIFACTORY_USERNAME }} \
            --docker-password=${{ secrets.ARTIFACTORY_PASSWORD }} \
            --docker-email=viveksaireddykoduru@gmail.com

      - name: Deploy Deployment YAML
        run: |
          kubectl apply -f deployment.yaml

      - name: Deploy Service YAML
        run: |
          kubectl apply -f service.yaml

      - name: Wait for deployment rollout
        run: |
          kubectl rollout status deployment/my-app

      - name: Get NodePort and test via cluster IP
        run: |
          kubectl wait --for=condition=ready pod \
            -l app=my-app \
            --timeout=60s

          # Get the kind control-plane container IP
          KIND_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kind-control-plane)

          echo "Kind control-plane IP: $KIND_IP"

          # Get NodePort of the service
          NODE_PORT=$(kubectl get svc my-app-service -o jsonpath='{.spec.ports[0].nodePort}')

          echo "NodePort: $NODE_PORT"

          echo "Calling the service via kind node IP..."

          # Call the service using cluster node IP + NodePort
          curl -v http://$KIND_IP:$NODE_PORT/hello || true
